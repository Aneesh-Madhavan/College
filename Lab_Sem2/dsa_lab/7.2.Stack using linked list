class Node:
    def __init__(self, key, next=None):
        self.key = key
        self.next = next
 
class Stack:
    def __init__(self):
        self.top = None
        self.nodesCount = 0
    def push(self, x):        
        node = Node(x)
        if node is None:
            print('Heap Overflow')
            return
        node.data = x
        node.next = self.top
        self.top = node
        self.nodesCount += 1
    def isEmpty(self):
        return self.top is None
    def peek(self):
        if not self.isEmpty():
            return self.top.data
        else:
            print('The stack is empty')
            exit(-1)
    def pop(self):           
        if self.top is None:
            print('Stack Underflow')
            exit(-1)
        top = self.top.data
        self.top = self.top.next
        self.nodesCount -= 1
        return top
    def size(self):
        return self.nodesCount
if __name__ == '__main__':
 
    stack = Stack()
 
    stack.push(1)
    stack.push(2)
    stack.push(3)
 
    print('Top element is', stack.peek())
 
    stack.pop()
    stack.pop()
    stack.pop()
 
    if stack.isEmpty():
        print('The stack is empty')
    else:
        print('The stack is not empty')
